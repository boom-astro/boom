[workspace]
resolver = "3"
members = ["api"]

[package]
name = "boom"
version = "0.1.0"
edition = "2021"

[dependencies]
apache-avro = "0.17.0"
async-trait = "0.1.87"
chrono = "0.4.39"
clap = { version = "4", features = ["derive", "env"] }
config = "0.15.6"
constcat = "0.6.0"
flare = "0.2.0"
flate2 = "1.1.0"
futures = "0.3.31"
indicatif = "0.17.11"
mongodb = "3.2.0"
ndarray = "0.16.1"
openssl = { version = "0.10.72", features = ["vendored"] }
opentelemetry = "0.30.0"
opentelemetry-otlp = { version = "0.30.0", features = ["grpc-tonic", "metrics"] }
opentelemetry_sdk = "0.30.0"
rand = "0.9.0"
rdkafka = { version = "0.38.0", features = ["gssapi", "ssl", "tracing", "sasl"] }
redis = { version = "0.28.2", features = ["tokio-comp"] }
reqwest = { version = "0.12.12", features = ["json", "stream"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0.138"
serde_with = "3.13.0"
tempfile = "3.20.0"
thiserror = "2.0.11"
tokio = { version = "1.43.1", features = ["full"] }
tracing = "0.1.41"
tracing-flame = "0.2.0"
tracing-subscriber = { version = "0.3.20", features = ["env-filter", "registry"]}
uuid = { version = "1.12", features = ["v4"] }
zune-inflate = { version = "0.2", default-features = false, features = [
    "gzip",
    "std",
] }

# on mac os silicon platform, install ort with the coreml feature
[target.'cfg(target_os = "macos")'.dependencies]
ort = { version = "=2.0.0-rc.10", features = ["coreml"] }

# otherwise, install ort with the cuda feature
[target.'cfg(target_os = "linux")'.dependencies]
ort = { version = "=2.0.0-rc.10", features = ["cuda"] }

[dev-dependencies]
criterion = "0.5"
rsgen-avro = "0.15.3"
