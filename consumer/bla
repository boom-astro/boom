# Configuration for Boom
#
# Every setting in this file has a corresponding environment variable following
# the pattern `BOOM__[{level1}__[{level2}__[...]]]{name}`, all uppercase. For
# instance, the application instance ID is read from `BOOM__APP__INSTANCE_ID`.
# All environment variables have priority over anything in this file.

app:
  # UUID associated with this instance of the consumer, typically set using
  # BOOM__APP__INSTANCE_ID, generated automatically if not provided.
  # instance_id: "00000000-0000-0000-0000-000000000000"

  # Name of the environment where this instance is deployed.
  deployment_env: "dev"

  # URL of the Redis/Valkey instance to send received messages to.
  redis_url: "redis://localhost:6379/"

  # How often (s) to report the total number of messages consumed.
  progress_report_interval: 5

consumer:
  # Timeout period (s) for feching metadata from Kafka.
  fetch_metadata_timeout: 30

  # Timeout period (s) for looking up the partition offsets in Kafka by
  # timestamp. Only applicable when the `--from` argument is a timestamp.
  timestamp_offset_lookup_timeout: 30

  # Timeout period (s) for receiving a new message from kafka. Should be greater
  # than zero, though short periods (e.g., 1 s) can be used to have the consumer
  # tasks terminate soon after reaching the end of their partitions. Very long
  # periods can be used to have the consumer tasks wait effectively forever,
  # requiring manual shutdown with ctrl-c.
  receive_timeout: 9999999

  # Timeout period (s) for enqueueing a message in Redis.
  enqueue_timeout: 30

  # Amount of time (s) to wait after failing to enqueue a message before trying
  # again.
  enqueue_retry_delay: 1

  # Redis queue length at which consumers begin to pause and wait until the
  # queue has more capacity. This is a "soft" limit because it's possible to
  # have a little more than this many items in the queue due to concurrency.
  queue_soft_limit: 15000

  # Amount of time (s) between queue length checks while the consumer is paused
  # waiting for the queue length to fall back below the soft limit.
  queue_check_delay: 1

decam:
  bootstrap_servers: "localhost:9092"

lsst:
  bootstrap_servers: "usdf-alert-stream-dev.lsst.cloud:9094"

  # Username for the LSST Kafka cluster.
  # Do *not* include it here! Use BOOM__LSST__USERNAME instead.
  username: ""

  # Password for the LSST Kafka cluster.
  # Do *not* include it here! Use BOOM__LSST__PASSWORD instead.
  password: ""

ztf:
  bootstrap_servers: "localhost:9092"
